#!/bin/bash

##
## Command for enabling users for personal svn/git repositories.
##
## @version $Version: 2016.10.16$
## @author Mauricio Villegas <mauricio_ville@yahoo.com>
## @copyright Copyright(c) 2014-present, Mauricio Villegas <mauricio_ville@yahoo.com>
## @license MIT License
## @link https://github.com/mauvilsa/user-repo
##

USER="$1";

REPODIR="public_svn";
CONF="/etc/apache2/user-repo-svn-users";
MACRO="UserSVN";
if [ "${0##*/}" = "gituser-init-user" ]; then
  REPODIR="public_git";
  CONF="/etc/apache2/user-repo-git-users";
  MACRO="UserGIT";
fi

APACHE=$(ps aux | sed -n '/^root/d; /bin\/apache2/{ s| .*||; p; q; }');

### Check input arguments ###
if [ "$#" = 0 ] || [ "$1" = "-h" ] || [ "$1" = "-help" ]; then
  echo "Usage: ${0##*/} USER";
  echo "For more information see man user-repo";
  exit 1;
elif [ "$(whoami)" != "root" ]; then
  echo "${0##*/}: error: this script has to be run as root";
  exit 1;
elif [ ! -d "/home/$USER" ]; then
  echo "${0##*/}: error: user's home directory does not exist";
  exit 1;
elif [ -d "/home/$USER/$REPODIR" ]; then
  echo "${0##*/}: error: user's $REPODIR already exists";
  exit 1;
elif [ "$APACHE" = "" ]; then
  echo "${0##*/}: error: unable to determine apache's running user";
  exit 1;
fi

### Create group for user and adding apache ###
GROUP="l-$USER";
uid=$(id -u "$USER");
groupadd -g $((uid+1000)) "$GROUP";
[ "$?" != 0 ] &&
  echo "${0##*/}: error: problems creating group $GROUP with id $((uid+1000))" &&
  exit 1;
adduser "$USER" "$GROUP";
adduser "$APACHE" "$GROUP";

### Create user repositories directory and authentication files ###
mkdir "/home/$USER/$REPODIR";
touch "/home/$USER/$REPODIR/.htpasswd";

[ "${0##*/}" = "svnuser-init-user" ] &&
echo "### This file is an example authorization file for svnserve.
### Its format is identical to that of mod_authz_svn authorization
### files.
### As shown below each section defines authorizations for the path and
### (optional) repository specified by the section name.
### The authorizations follow. An authorization line can refer to:
###  - a single user,
###  - a group of users defined in a special [groups] section,
###  - an alias defined in a special [aliases] section,
###  - all authenticated users, using the '\$authenticated' token,
###  - only anonymous users, using the '\$anonymous' token,
###  - anyone, using the '*' wildcard.
###
### A match can be inverted by prefixing the rule with '~'. Rules can
### grant read ('r') access, read-write ('rw') access, or no access
### ('')." \
  > "/home/$USER/$REPODIR/.svn-authz";

echo "See 'man user-repo'." > "/home/$USER/$REPODIR/README.txt";

### Fix repositories directory permissions ###
chown -R "$USER:$GROUP" "/home/$USER/$REPODIR";
chmod 0640 "/home/$USER/$REPODIR"/.[hs]*; # rwxr----
chmod 2750 "/home/$USER/$REPODIR";        # rwxr-s--
chmod ug-w "/home/$USER/$REPODIR/README.txt";
chmod go+x "/home/$USER";

echo "${0##*/}: created user's $REPODIR directory";
find "/home/$USER/$REPODIR" | xargs ls -ld;

### Add user to apache configuration and restart the server ###
if [ $(grep -c "^Use $MACRO $USER$" "$CONF") != 0 ]; then
  echo "${0##*/}: warning: 'Use $MACRO $USER' already in $CONF";
else
  echo "Use $MACRO $USER" >> "$CONF";
  echo "${0##*/}: added 'Use $MACRO $USER' to $CONF";
fi

echo "${0##*/}: restarting apache";
service apache2 restart;
